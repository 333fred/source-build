<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Condition="'$(ImportedRootDirProps)' == ''" Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <UsingTask AssemblyFile="$(BuildTaskDirectory)Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="WriteVersionsFile" />
  <UsingTask AssemblyFile="$(BuildTaskDirectory)Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="AddSourceToNuGetConfig" />
  <UsingTask AssemblyFile="$(BuildTaskDirectory)Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="SetVersionsEnvironment" />

  <!--
    =======================================================================================================
                                         Core-Setup Targets
    =======================================================================================================
  
  -->

  <Target Name="_ExpectedVersionFiles" Returns="@(OtherRepositories)">
    <ItemGroup>
      <OtherRepositories Include="@(Repository)" Exclude="core-setup">
        <VersionFile>%(Repository.VersionFile)</VersionFile>
      </OtherRepositories>
    </ItemGroup>
  </Target>

  <Target Name="_InitializeCoreSetup" DependsOnTargets="_ExpectedVersionFiles">
    <FindInList CaseSensitive="false" List="@(Repository)" ItemSpecToFind="core-setup">
      <Output TaskParameter="ItemFound" ItemName="CoreSetup" />
    </FindInList>

    <Error Condition="'%(CoreSetup.ProjectDirectory)' == ''" Text="You are missing CoreSetup metadata, or you need to specify a CoreSetup git directory, either with the /p:PathToCoreSetup switch, or in the 'targets/targets.props'" />
    
    <PropertyGroup>
      <_CoreSetupTargetRid>$(TargetRid)</_CoreSetupTargetRid>
      <CoreSetupDirectory>%(CoreSetup.ProjectDirectory)</CoreSetupDirectory>
      <CoreSetupPackageOutputDirectory>$(CoreSetupDirectory)artifacts/$(_CoreSetupTargetRid)/packages/</CoreSetupPackageOutputDirectory>
    </PropertyGroup>
  </Target>

  <Target Name="BuildCoreSetup" DependsOnTargets="_InitializeCoreSetup">
    <Message Text="Producing version files : @(VersionFile)" />

    <SetVersionsEnvironment OS="$(OS)" Repositories="@(OtherRepositories)">
      <Output PropertyName="SetVersionFilesCmd" TaskParameter="Command" />
    </SetVersionsEnvironment>

    <Exec Command="$(SetVersionFilesCmd) &amp; powershell.exe $(CoreSetupDirectory)build_projects/update-dependencies/update-dependencies.ps1 -Targets UpdateFiles"
          Condition="'$(OS)' == 'Windows_NT'"
          WorkingDirectory="$(CoreSetupDirectory)" />

    <Exec Command="$(SetVersionFilesCmd) $(CoreSetupDirectory)build_projects/update-dependencies/update-dependencies$(ShellExtension) --targets UpdateFiles"
          Condition="'$(OS)' != 'Windows_NT'"
          WorkingDirectory="$(CoreSetupDirectory)" />

    <AddSourceToNuGetConfig NuGetConfigFile="$(CoreSetupDirectory)/NuGet.Config"
                            SourceName="source-built"
                            SourcePath="$(SourceBuiltPackagesPath)" />
    
    <Exec Command="$(CoreSetupDirectory)build$(ShellExtension) -Configuration $(Configuration) -Targets Init,Compile,Package"
          Condition="'$(OS)' == 'Windows_NT'"
          WorkingDirectory="$(CoreSetupDirectory)" />

    <Exec Command="$(CoreSetupDirectory)build$(ShellExtension) --configuration $(Configuration) --targets Init,Compile,Package --skip-deb-package-build"
          Condition="'$(OS)' != 'Windows_NT'"
          WorkingDirectory="$(CoreSetupDirectory)" />

    <ItemGroup>
      <CoreSetupPackages Include="$(CoreSetupPackageOutputDirectory)*.nupkg" />
      <CoreSetupTarballs Include="$(CoreSetupPackageOutputDirectory)*$(TarBallExtension)" />
    </ItemGroup>
    
    <Copy SourceFiles="@(CoreSetupPackages)"
          DestinationFolder="$(SourceBuiltPackagesPath)" />


    <WriteVersionsFile NugetPackages="@(CoreSetupPackages)"
                       OutputPath="%(CoreSetup.VersionFile)" />

    <Copy SourceFiles="@(CoreSetupTarballs)"
          DestinationFolder="$(OutputPath)" />
  </Target>

  <Target Name="CleanCoreSetup">
    <Message Importance="Normal" Text="$(CoreSetupDirectory)clean$(ShellExtension)" />
    <Exec Command="$(CoreSetupDirectory)clean$(ShellExtension)" />
  </Target>
</Project>
