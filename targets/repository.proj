<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask AssemblyFile="$(TasksBinDir)Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="WriteVersionsFile" />

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))/dir.props" />

  <!--Repo specific properties -->
  <Import Project="$(RepositoryName).props" />

  <Target Name="BuildRepositoryAndDependencies" DependsOnTargets="BuildRepositoryReferences;Build" />

  <Target Name="BuildRepositoryReferences" Condition="'@(RepositoryReference->Count())' &gt; 0">
    <ItemGroup>
      <_UnreferencedRepository Include="@(Repository)" Exclude="@(RepositoryReference)" />
      <_DependentRepository Include="@(Repository)" Exclude="@(_UnreferencedRepository)" />
      <_DependentRepository Remove="$(RepositoryName)" />

      <_DependentProject Include="$(MSBuildThisFile)">
        <AdditionalProperties>RepositoryName=%(_DependentRepository.Identity);PathToRepo=%(_DependentRepository.PathToRepo);RepositoryOrganization=%(_DependentRepository.Organization);RepositoryBranch=%(_DependentRepository.Branch)</AdditionalProperties>
      </_DependentProject>
    </ItemGroup>

    <MSBuild Projects="@(_DependentProject)" Targets="BuildRepositoryAndDependencies" BuildInParallel="$(BuildInParallel)" />
  </Target>

  <Target Name="Build">
    <Message Importance="High" Text="Building '$(RepositoryName)'" />
    <Exec Command="$(BuildCommand)" WorkingDirectory="$(ProjectDirectory)" />
  </Target>

  <Target Name="Package" AfterTargets="Build" Condition="'$(BuildPackagesCommand)' != ''">
    <Exec Command="$(BuildPackagesCommand)" WorkingDirectory="$(ProjectDirectory)" />
  </Target>

  <Target Name="CopyPackage"
          Outputs="@(_BuiltPackages)"
          AfterTargets="Package" >
    <ItemGroup>
      <!-- Filter out packages for WriteVersions -->
      <_BuiltPackages Include="$(PackagesOutput)/*.nupkg" Exclude="$(PackagesOutput)/*.symbols.nupkg"/>
    </ItemGroup>
    <Copy SourceFiles="@(_BuiltPackages)"
          DestinationFolder="$(SourceBuiltPackagesPath)"
          Condition="'@(_BuiltPackages)'!=''" />
  </Target>

  <Target Name="WriteVersions"
          Inputs="_BuiltPackages"
          Outputs="Version file written."
          AfterTargets="CopyPackage" >
    <WriteVersionsFile NugetPackages="@(_BuiltPackages)"
                       OutputPath="$(VersionFileLocation)"
                       Condition="'@(_BuiltPackages)'!=''" />
  </Target>

  <Target Name="Clean" Condition="'$(CleanCommand)' != ''" >
    <Exec Command="$(CleanCommand)" WorkingDirectory="$(ProjectDirectory)" />
  </Target>

  <Target Name="Update" BeforeTargets="Build" Condition="'$(UpdateCommand)' != ''" >
    <Exec Command="$(UpdateCommand)" WorkingDirectory="$(ProjectDirectory)" />
  </Target>

 <Target Name="BootstrapBuildTools" BeforeTargets="Build"
         Condition="'$(SkipBootstrapBuildTools)' != 'true' and '$(_IsBootstrapping)' == 'true'">
   <PropertyGroup>
     <ProjectToolsDir>$(ProjectDirectory)Tools/</ProjectToolsDir>
   </PropertyGroup>
   <RemoveDir Directories="$(ProjectToolsDir)" />
   <MakeDir Directories="$(ProjectToolsDir)" />
   <ItemGroup>
     <BuildToolsFile Include="$(BootstrapBuildToolsDir)/**" />
     <BuildToolsFile Include="$(ProjectDirectory)Tools-Override/**" />
   </ItemGroup>

   <Copy SourceFiles="@(BuildToolsFile)"
         DestinationFiles="@(BuildToolsFile->'$(ProjectToolsDir)%(RecursiveDir)%(Filename)%(Extension)')" />

   <Copy SourceFiles="$(BootstrapBuildToolsDir)/BuildToolsVersion.txt"
         DestinationFolder="$(ProjectDirectory)" />
  </Target>

  <!--Repo targets -->
  <Import Project="$(RepositoryName).targets" Condition="Exists('$(RepositoryName).targets')"/>
</Project>
