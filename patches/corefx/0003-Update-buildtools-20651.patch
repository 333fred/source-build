From 6526c0585d089a444ef8ce6b9b1f96b771ea42e5 Mon Sep 17 00:00:00 2001
From: Matt Ellis <matell@microsoft.com>
Date: Sun, 4 Jun 2017 19:14:42 -0700
Subject: [PATCH 3/3] Update buildtools (#20651)

This brings in the new version of buildtools that publishes the
tool-runtime as a portable application instead of standalone.

The source file changes are to remove some non unicode characters in
files that were tripping Roslyn up.
Conflicts:
	BuildToolsVersion.txt
---
 BuildToolsVersion.txt                                               | 2 +-
 .../tests/ManualTests/SQL/SqlBulkCopyTest/CheckConstraints.cs       | 2 +-
 .../tests/ManualTests/SQL/SqlBulkCopyTest/CopyVariants.cs           | 4 ++--
 .../src/System/Net/HttpListenerRequestUriBuilder.cs                 | 4 ++--
 .../src/System/Runtime/Serialization/Json/JsonWriterDelegator.cs    | 2 +-
 .../tests/Xslt/XsltCompiler/CommonScenarios/XsltcTestFile.cs        | 6 +++---
 .../src/System/Reflection/Internal/Utilities/BlobUtilities.cs       | 2 +-
 .../src/Internal/Cryptography/RijndaelImplementation.cs             | 2 +-
 .../src/System/Security/Cryptography/RijndaelManaged.cs             | 2 +-
 .../tests/CertificateCreation/EccTestData.cs                        | 4 ++--
 10 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/BuildToolsVersion.txt b/BuildToolsVersion.txt
index 9e64601..a72a222 100644
--- a/BuildToolsVersion.txt
+++ b/BuildToolsVersion.txt
@@ -1 +1 @@
-2.0.0-prerelease-01616-05
+2.0.0-prerelease-01702-02
diff --git a/src/System.Data.SqlClient/tests/ManualTests/SQL/SqlBulkCopyTest/CheckConstraints.cs b/src/System.Data.SqlClient/tests/ManualTests/SQL/SqlBulkCopyTest/CheckConstraints.cs
index c4e3206..ff9d279 100644
--- a/src/System.Data.SqlClient/tests/ManualTests/SQL/SqlBulkCopyTest/CheckConstraints.cs
+++ b/src/System.Data.SqlClient/tests/ManualTests/SQL/SqlBulkCopyTest/CheckConstraints.cs
@@ -22,7 +22,7 @@ namespace System.Data.SqlClient.ManualTesting.Tests
                     Helpers.Execute(dstCmd, "create table " + srctable + " (col1 int , col2 int, col3 text)");
                     Helpers.Execute(dstCmd, "insert into " + srctable + " values (33, 498, 'Michael')");
                     Helpers.Execute(dstCmd, "insert into " + srctable + " values (34, 499, 'Astrid')");
-                    Helpers.Execute(dstCmd, "insert into " + srctable + " values (65, 500, 'alles Käse')");
+                    Helpers.Execute(dstCmd, "insert into " + srctable + " values (65, 500, 'alles KÃ¤se')");
 
                     Helpers.Execute(dstCmd, "create table " + dstTable + " (col1 int primary key, col2 int CONSTRAINT CK_" + dstTable + " CHECK (col2 < 500), col3 text)");
 
diff --git a/src/System.Data.SqlClient/tests/ManualTests/SQL/SqlBulkCopyTest/CopyVariants.cs b/src/System.Data.SqlClient/tests/ManualTests/SQL/SqlBulkCopyTest/CopyVariants.cs
index 054564a..6dcaee2 100644
--- a/src/System.Data.SqlClient/tests/ManualTests/SQL/SqlBulkCopyTest/CopyVariants.cs
+++ b/src/System.Data.SqlClient/tests/ManualTests/SQL/SqlBulkCopyTest/CopyVariants.cs
@@ -29,7 +29,7 @@ namespace System.Data.SqlClient.ManualTesting.Tests
                 "insert into " + dstTable + "_src values (10, convert(uniqueidentifier, '00000000-0000-0000-0000-000000000009') )",
                 "insert into " + dstTable + "_src values (11, convert(varbinary(756), 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0A) )",
                 "insert into " + dstTable + "_src values (12, convert(varchar(756), '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101') )",
-                "insert into " + dstTable + "_src values (13, convert(nvarchar(756), N'???a???????????????????????????????üböuaäZßABCÄboÜOUÖvrhÃã??z?????????????????z?????????A?????a???????????????????????????????üböuaäZßABCÄboÜOUÖvrhÃã??z?????????????????z?????????A?????a???????????????????????????????üböuaäZßABCÄboÜOUÖvrhÃã??z?????????????????z?????????A?????a???????????????????????????????üböuaäZßABCÄboÜOUÖvrhÃã??z?????????????????z?????????A?????a?????') )",
+                "insert into " + dstTable + "_src values (13, convert(nvarchar(756), N'???a???????????????????????????????Ã¼bÃ¶uaÃ¤ZÃŸABCÃ„boÃœOUÃ–vrhÃƒÃ£??z?????????????????z?????????A?????a???????????????????????????????Ã¼bÃ¶uaÃ¤ZÃŸABCÃ„boÃœOUÃ–vrhÃƒÃ£??z?????????????????z?????????A?????a???????????????????????????????Ã¼bÃ¶uaÃ¤ZÃŸABCÃ„boÃœOUÃ–vrhÃƒÃ£??z?????????????????z?????????A?????a???????????????????????????????Ã¼bÃ¶uaÃ¤ZÃŸABCÃ„boÃœOUÃ–vrhÃƒÃ£??z?????????????????z?????????A?????a?????') )",
                 "insert into " + dstTable + "_src values (14, convert(datetime, {ts '2003-01-11 12:54:01.133'}) )",
                 "insert into " + dstTable + "_src values (15, convert(bigint, 444444444444404) )",
                 "insert into " + dstTable + "_src values (16, convert(int, -555505) )",
@@ -76,4 +76,4 @@ namespace System.Data.SqlClient.ManualTesting.Tests
             }
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/System.Net.HttpListener/src/System/Net/HttpListenerRequestUriBuilder.cs b/src/System.Net.HttpListener/src/System/Net/HttpListenerRequestUriBuilder.cs
index 25146bb..8bdd83c 100644
--- a/src/System.Net.HttpListener/src/System/Net/HttpListenerRequestUriBuilder.cs
+++ b/src/System.Net.HttpListener/src/System/Net/HttpListenerRequestUriBuilder.cs
@@ -36,8 +36,8 @@ namespace System.Net
         //
         // When parsing ANSI (Latin 1) encoded path '/pa%C4th/', %C4 will be added to rawOctets and when
         // we reach 't', the content of rawOctets { 0xC4 } will be fed into the ANSI encoding. The resulting 
-        // string 'Ä' will be percent encoded into UTF-8 octets and appended to requestUriString. The final
-        // path will be '/pa%C3%84th/', where '%C3%84' is the UTF-8 percent encoded character 'Ä'.
+        // string 'Ã„' will be percent encoded into UTF-8 octets and appended to requestUriString. The final
+        // path will be '/pa%C3%84th/', where '%C3%84' is the UTF-8 percent encoded character 'Ã„'.
         private List<byte> _rawOctets;
         private string _rawPath;
 
diff --git a/src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/JsonWriterDelegator.cs b/src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/JsonWriterDelegator.cs
index c66e8e2..abb1e23 100644
--- a/src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/JsonWriterDelegator.cs
+++ b/src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/JsonWriterDelegator.cs
@@ -180,7 +180,7 @@ namespace System.Runtime.Serialization.Json
                 // Fetching the UtcOffset is expensive so we need to avoid it if possible. We can do a fast
                 // bounds check to decide if the more expensive bounds check is needed. The result from 
                 // TimeZoneInfo.Local.GetUtcOffset(value) is bounded to +/- 24 hours. If 
-                // (DateTime.MinValue + 24 hours) < value < (DateTime.MaxValue – 24 hours), then we don't need
+                // (DateTime.MinValue + 24 hours) < value < (DateTime.MaxValue - 24 hours), then we don't need
                 // to check using the real UtcOffset as it doesn't matter what the offset is, it can't cause
                 // an overflow/underflow condition.
                 
diff --git a/src/System.Private.Xml/tests/Xslt/XsltCompiler/CommonScenarios/XsltcTestFile.cs b/src/System.Private.Xml/tests/Xslt/XsltCompiler/CommonScenarios/XsltcTestFile.cs
index f02252f..9ba53bd 100644
--- a/src/System.Private.Xml/tests/Xslt/XsltCompiler/CommonScenarios/XsltcTestFile.cs
+++ b/src/System.Private.Xml/tests/Xslt/XsltCompiler/CommonScenarios/XsltcTestFile.cs
@@ -45,9 +45,9 @@ namespace System.Xml.Tests
         [InlineData("@infft14.txt", "fft14.dll", "no", "fft14", "fft14.pdb", "no", "fft14.txt")]
         //[Variation("15", Desc = "Test multiple config files with circular reference and case sensitive file names specified", Pri = 1, Params = new object[] { "@infft15.txt", "fft15.dll", "no", "fft15", "fft15.pdb", "no", "fft15.txt" })]
         //[InlineData("@infft15.txt", "fft15.dll", "no", "fft15", "fft15.pdb", "no", "fft15.txt")] //Skipping this, it tries to load System.dll
-        //[Variation("17", Desc = "Exercise comments(‘#’) within file", Pri = 1, Params = new object[] { "@infft17.txt", "fft17.dll", "yes", "fft17", "fft17.pdb", "no", "fft17.txt" })]
+        //[Variation("17", Desc = "Exercise comments(Â‘#Â’) within file", Pri = 1, Params = new object[] { "@infft17.txt", "fft17.dll", "yes", "fft17", "fft17.pdb", "no", "fft17.txt" })]
         //[InlineData("@infft17.txt", "fft17.dll", "yes", "fft17", "fft17.pdb", "no", "fft17.txt")] //Skipping this, it tries to load System.dll
-        //[Variation("18", Desc = "When loading from a file exercise commands and filenames with ‘#” in them", Pri = 1, Params = new object[] { "@infft18.txt", "fft18.dll", "yes", "AB#CD", "fft18.pdb", "no", "fft18.txt" })]
+        //[Variation("18", Desc = "When loading from a file exercise commands and filenames with Â‘#Â” in them", Pri = 1, Params = new object[] { "@infft18.txt", "fft18.dll", "yes", "AB#CD", "fft18.pdb", "no", "fft18.txt" })]
         //[InlineData("@infft18.txt", "fft18.dll", "yes", "AB#CD", "fft18.pdb", "no", "fft18.txt")] //Skipping this, it tries to load System.dll
         //[Variation("19", Desc = "Exercise wildcards with @", Pri = 1, Params = new object[] { "@*.txt", "fft19.dll", "no", "fft19", "fft19.pdb", "no", "fft19.txt", "EnglishOnly" })]
         [InlineData("@*.txt", "fft19.dll", "no", "fft19", "fft19.pdb", "no", "fft19.txt"/*, "EnglishOnly"*/)]
@@ -73,4 +73,4 @@ namespace System.Xml.Tests
             VerifyTest(cmdLine, asmName, asmCreated, typeName, pdbName, pdbCreated, baselineFile, _createFromInputFile);
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/System.Reflection.Metadata/src/System/Reflection/Internal/Utilities/BlobUtilities.cs b/src/System.Reflection.Metadata/src/System/Reflection/Internal/Utilities/BlobUtilities.cs
index a056571..76f081c 100644
--- a/src/System.Reflection.Metadata/src/System/Reflection/Internal/Utilities/BlobUtilities.cs
+++ b/src/System.Reflection.Metadata/src/System/Reflection/Internal/Utilities/BlobUtilities.cs
@@ -339,7 +339,7 @@ namespace System.Reflection
             // ECMA-335 II.24.2.4:
             // This final byte holds the value 1 if and only if any UTF16 character within
             // the string has any bit set in its top byte, or its low byte is any of the following:
-            // 0x01–0x08, 0x0E–0x1F, 0x27, 0x2D, 0x7F.  Otherwise, it holds 0.
+            // 0x01-0x08, 0x0E-0x1F, 0x27, 0x2D, 0x7F.  Otherwise, it holds 0.
             // The 1 signifies Unicode characters that require handling beyond that normally provided for 8-bit encoding sets.
 
             foreach (char ch in str)
diff --git a/src/System.Security.Cryptography.Algorithms/src/Internal/Cryptography/RijndaelImplementation.cs b/src/System.Security.Cryptography.Algorithms/src/Internal/Cryptography/RijndaelImplementation.cs
index 56bf7f4..5598633 100644
--- a/src/System.Security.Cryptography.Algorithms/src/Internal/Cryptography/RijndaelImplementation.cs
+++ b/src/System.Security.Cryptography.Algorithms/src/Internal/Cryptography/RijndaelImplementation.cs
@@ -34,7 +34,7 @@ namespace Internal.Cryptography
                 if (value == 192 || value == 256)
                     throw new PlatformNotSupportedException(SR.Cryptography_Rijndael_BlockSize);
 
-                // Any other invalid block size will get the normal “invalid block size” exception.
+                // Any other invalid block size will get the normal "invalid block size" exception.
                 _impl.BlockSize = value;
             }
         }
diff --git a/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RijndaelManaged.cs b/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RijndaelManaged.cs
index 6027356..b3dc2d7 100644
--- a/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RijndaelManaged.cs
+++ b/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RijndaelManaged.cs
@@ -28,7 +28,7 @@ namespace System.Security.Cryptography
                 if (value == 192 || value == 256)
                     throw new PlatformNotSupportedException(SR.Cryptography_Rijndael_BlockSize);
 
-                // Any other invalid block size will get the normal “invalid block size” exception.
+                // Any other invalid block size will get the normal "invalid block size" exception.
                 _impl.BlockSize = value;
             }
         }
diff --git a/src/System.Security.Cryptography.X509Certificates/tests/CertificateCreation/EccTestData.cs b/src/System.Security.Cryptography.X509Certificates/tests/CertificateCreation/EccTestData.cs
index de9e08c..608588e 100644
--- a/src/System.Security.Cryptography.X509Certificates/tests/CertificateCreation/EccTestData.cs
+++ b/src/System.Security.Cryptography.X509Certificates/tests/CertificateCreation/EccTestData.cs
@@ -45,7 +45,7 @@ namespace System.Security.Cryptography.X509Certificates.Tests.CertificateCreatio
             CurveOid = Secp256r1OidValue,
             CurveEncodedOidHex = Secp256r1OidHexValue,
 
-            // Suite B Implementer’s Guide to FIPS 186-3,
+            // Suite B ImplementerÂ’s Guide to FIPS 186-3,
             // D.1 Example ECDSA Signature for P-256
             KeyParameters = new ECParameters
             {
@@ -67,7 +67,7 @@ namespace System.Security.Cryptography.X509Certificates.Tests.CertificateCreatio
             CurveOid = Secp384r1OidValue,
             CurveEncodedOidHex = Secp384r1OidHexValue,
 
-            // Suite B Implementer’s Guide to FIPS 186-3,
+            // Suite B ImplementerÂ’s Guide to FIPS 186-3,
             // D.2 Example ECDSA Signature for P-384
             KeyParameters = new ECParameters
             {
-- 
1.8.3.1

